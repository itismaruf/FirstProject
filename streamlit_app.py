# app.py

import streamlit as st
import pandas as pd
from functions import (
    load_data, clean_data, encode_data,
    plot_survival_by_sex, plot_survival_by_class, plot_age_distribution,
    train_model, predict_single_passenger
)

st.set_page_config(page_title="üö¢ Titanic Classifier", layout="wide")
st.title("üö¢ Titanic Classifier - –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤—ã–∂–∏–≤–∞–µ–º–æ—Å—Ç–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤")

# === üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
st.subheader("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
raw_df = load_data()
df = clean_data(raw_df)
df_encoded = encode_data(df)

st.dataframe(df.head(10), use_container_width=True)

# === üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö ===
st.subheader("üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")

col1, col2 = st.columns(2)
with col1:
    st.plotly_chart(plot_survival_by_sex(df), use_container_width=True)
    st.plotly_chart(plot_survival_by_class(df), use_container_width=True)
with col2:
    st.plotly_chart(plot_age_distribution(df), use_container_width=True)

# === ü§ñ –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ ===
st.subheader("ü§ñ –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ RandomForest")

model, train_acc, test_acc = train_model(df_encoded)

st.success(f"Train Accuracy: {train_acc:.2f}")
st.success(f"Test Accuracy: {test_acc:.2f}")

# === üßç –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
st.sidebar.header("üîÆ –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–∞")

sex = st.sidebar.selectbox("–ü–æ–ª", ["male", "female"])
pclass = st.sidebar.selectbox("–ö–ª–∞—Å—Å", [1, 2, 3])
age = st.sidebar.slider("–í–æ–∑—Ä–∞—Å—Ç", 0, 80, 30)
fare = st.sidebar.slider("–¢–∞—Ä–∏—Ñ", 0.0, 600.0, 50.0)
sibsp = st.sidebar.slider("–ß–∏—Å–ª–æ –±—Ä–∞—Ç—å–µ–≤/—Å–µ—Å—Ç–µ—Ä –∏–ª–∏ —Å—É–ø—Ä—É–≥–æ–≤ –Ω–∞ –±–æ—Ä—Ç—É", 0, 8, 0)
parch = st.sidebar.slider("–ß–∏—Å–ª–æ —Ä–æ–¥–∏—Ç–µ–ª–µ–π/–¥–µ—Ç–µ–π –Ω–∞ –±–æ—Ä—Ç—É", 0, 6, 0)
embarked = st.sidebar.selectbox("–ü–æ—Ä—Ç –ø–æ—Å–∞–¥–∫–∏", ["C", "Q", "S"])

user_input = {
    "Sex": sex,
    "Pclass": pclass,
    "Age": age,
    "Fare": fare,
    "SibSp": sibsp,
    "Parch": parch,
    "Embarked": embarked
}

# üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
st.sidebar.subheader("üß† –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è")
prediction, proba = predict_single_passenger(model, df_encoded.drop("Survived", axis=1), user_input)

label = "‚úÖ –í—ã–∂–∏–ª" if prediction == 1 else "‚ùå –ù–µ –≤—ã–∂–∏–ª"
st.sidebar.markdown(f"### –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {label}")

st.sidebar.write("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏:")
st.sidebar.progress(proba[1])  # –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–∂–∏–≤–∞–Ω–∏—è
st.sidebar.markdown(f"–í—ã–∂–∏–≤–∞–Ω–∏–µ: **{proba[1]*100:.1f}%**")
st.sidebar.markdown(f"–ù–µ –≤—ã–∂–∏–ª: **{proba[0]*100:.1f}%**")
